name: Build and Test

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때마다 트리거
  pull_request:
    branches:
      - main  # main 브랜치로의 PR 발생 시 트리거

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 8083:8083
          - 33306:3306
          - 29092:19092  # Kafka 포트
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock  # Docker socket 마운트

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
          docker-compose --version

      - name: Build Docker images with Docker Compose
        run: |
          docker-compose -f docker-compose.yml build

      - name: Start containers with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d

      - name: Wait for services to be ready
        run: |
          # Wait for payment-api to be ready on port 8083
          echo "Waiting for the API to be ready..."
          sleep 30  # Wait for 30 seconds to give the containers time to initialize

      - name: Run tests
        run: |
          curl -I http://localhost:8083/payments | grep "200"

      - name: Shutdown containers
        run: |
          docker-compose down

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # main 브랜치일 때만 배포

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy to production (optional)
        run: |
          # 배포 관련 명령어 (예: 서버에 SSH 접속하여 `docker-compose up -d` 실행)
          echo "Deploying to production..."
